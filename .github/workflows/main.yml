name: Auto tag Main Branch

on:
  create:
    branches:
      - 'release/*'
jobs:
  create-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Sand box other commands
        id: get-version
        run: |
          branch=$(git for-each-ref --format="%(upstream:short)" $(git symbolic-ref -q BASE))
          # rutina para splitear la version que se puso en la brnacha
          IFS="/" read -ra version_array <<< "$branch"
          VERSION_NUMBER="${version_array[2]}"

          echo "::set-output name=version_number::$VERSION_NUMBER"
          
      - name: Increase version number in app build.gradle file
        
        # if: ${{ success() }}
        run: |
          # branch=$(git for-each-ref --format="%(upstream:short)" $(git symbolic-ref -q HEAD))

          # print content
          cd PrintApp
          
          # rutina para splitear la version que se puso en la brnacha
          # IFS="/" read -ra version_array <<< "$branch"
          # version_number="${version_array[2]}"

          m_version=${{ steps.get-version.outputs.version_number }}

          echo "esta es la variable env: $m_version"
          # rutina para splitear el minor 
          IFS="." read -ra version_name_items <<< "$m_version"
          major="${version_name_items[0]}"
          minor="${version_name_items[1]}"
          patch="0"

          # rutina para sobreescribir 
          version_minor=$((((minor)) + 1))
          echo "esta es la minor aumentada: $version_minor"
          version_name="${major}.${version_minor}.${patch}"
          echo "esta es la v $version_name"
          
          # sed -i "s/versionName [0-9]\+/versionName $version_name/" app/build.gradle
          sed -i "s/versionName \"[0-9.]\+\"/versionName \"$version_name\"/" app/build.gradle
          
          # commit changes
          git config user.email "mail@rccl.com"
          git config user.name "RCCL-automated versioning"
          git add app/build.gradle
          git commit -m "Application version name updated to $new_version_name"
          git push origin master
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false 
          
      - name: Create Tag to Main Branch
        run: |
          branch=$(git for-each-ref --format="%(upstream:short)" $(git symbolic-ref -q HEAD))
          echo "This is the branch head: $branch"
          echo "this is head: $HEAD"
          # rutina para splitear la version que se puso en la ramona
          IFS="/" read -ra version_array <<< "$branch"
          version_number="${version_array[2]}"
          echo "version number: $version_number"

          # verifica si es una branch de release si lo es, entonces crea el tag, sino no hace nada
          if [[ $branch == *"release"* ]]; then 
            tag_name="auto-release-tag-v$version_number"
            echo "this is the tag: $tag_name"
            git tag "$tag_name"
            git push origin "$tag_name"
            echo "Tag created for new app: $tag_name"
          else
            echo "Tag not created"
          fi 
